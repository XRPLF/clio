name: Build Clio
on:
  push:
    branches: [master, release/*, develop, develop-next]
  pull_request:
    branches: [master, release/*, develop, develop-next]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Run clang-format
        uses: ./.github/actions/lint

  build_dev:
    name: Build on Mac/Clang14 and run tests
    needs: lint
    continue-on-error: false
    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v3
        with:
          path: clio

      - name: Check Boost cache
        id: boost
        uses: actions/cache@v3
        with:
          path: boost_1_77_0
          key: ${{ runner.os }}-boost

      - name: Build Boost
        if: ${{ steps.boost.outputs.cache-hit != 'true' }}
        run: |
          rm -rf boost_1_77_0.tar.gz boost_1_77_0 # cleanup if needed first
          curl -s -fOJL "https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.gz"
          tar zxf boost_1_77_0.tar.gz
          cd boost_1_77_0
          ./bootstrap.sh
          ./b2 define=BOOST_ASIO_HAS_STD_INVOKE_RESULT cxxflags="-std=c++20"

      - name: Install dependencies
        run: |
          brew install llvm@14 pkg-config protobuf openssl ninja cassandra-cpp-driver bison cmake

      - name: Setup environment for llvm-14
        run: |
          export PATH="/usr/local/opt/llvm@14/bin:$PATH"
          export LDFLAGS="-L/usr/local/opt/llvm@14/lib -L/usr/local/opt/llvm@14/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@14/lib/c++"
          export CPPFLAGS="-I/usr/local/opt/llvm@14/include"

      - name: Build clio
        run: |
          export BOOST_ROOT=$(pwd)/boost
          cd clio
          cmake -B build -DCMAKE_C_COMPILER='/usr/local/opt/llvm@14/bin/clang' -DCMAKE_CXX_COMPILER='/usr/local/opt/llvm@14/bin/clang++'
          if ! cmake --build build -j; then
            echo '# ðŸ”¥ðŸ”¥ MacOS AppleClang build failed!ðŸ’¥' >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
      # - name: Run Test
      #   run: |
      #     cd clio/build
      #     ./clio_tests --gtest_filter="-BackendTest*:BackendCassandraBaseTest*:BackendCassandraTest*"
