name: Build Clio
on:
  push:
    branches: [master, release/*, develop, develop-next]
  pull_request:
    branches: [master, release/*, develop, develop-next]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Run clang-format
        uses: ./.github/actions/lint

  build_dev:
    name: Build on MacOS and run tests
    needs: lint
    continue-on-error: false
    runs-on: [self-hosted, MacOS]

    steps:
      - uses: actions/checkout@v3
        with:
          path: clio

      - name: Check Boost cache
        id: boost
        uses: actions/cache@v3
        with:
          path: boost
          key: ${{ runner.os }}-boost

      - name: Build boost
        if: steps.boost.outputs.cache-hit != 'true'
        run: |
          curl -s -OJL "https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.gz"
          tar zxf boost_1_77_0.tar.gz
          mv boost_1_77_0 boost
          cd boost
          ./bootstrap.sh
          ./b2 cxxflags="-std=c++14"
      - name: install deps
        run: |
          brew install pkg-config protobuf openssl ninja cassandra-cpp-driver bison
      - name: Build clio
        run: |
          export BOOST_ROOT=$(pwd)/boost
          cd clio
          cmake -B build
          if ! cmake --build build -j$(nproc); then
            echo '# ðŸ”¥ðŸ”¥ MacOS AppleClang build failed!ðŸ’¥' >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
      - name: Run Test
        run: |
          cd clio/build
          ./clio_tests --gtest_filter="-BackendTest*:BackendCassandraBaseTest*:BackendCassandraTest*"
