name: Build Clio
on:
  push:
    branches: [master, release/*, develop, develop-next]
  pull_request:
    branches: [master, release/*, develop, develop-next]
  workflow_dispatch:

jobs:
  build_dev:
    name: Build on Mac/Clang14 and run tests
    continue-on-error: false
    runs-on: [self-hosted, macOS]
    steps:
      - uses: actions/checkout@v3
        with:
          path: clio
      #our self-host mac has conan-non-prod configured
      - name: List conan artifactory
        run: |
          conan search
          #remove cache , trigger rebuild for CI , keep it for debugging
          #conan remove cassandra-driver/2.16.2 
          # remove old cassandra-cpp-driver installed by brew
          # if [ -d /usr/local/opt/cassandra-cpp-driver ]
          # then
          #   echo "remove cassandra-cpp-driver"
          #   brew uninstall cassandra-cpp-driver
          # fi
          # # remove old openssl installed by brew
          # if [ -d /usr/local/opt/openssl ]
          # then
          #   echo "remove openssl"
          #   brew uninstall openssl --ignore-dependencies
          # fi
      - name: Install dependencies
        run: |
          brew install llvm@14 pkg-config protobuf ninja bison cmake
      - name: Setup environment for llvm-14
        run: |
          export PATH="/usr/local/opt/llvm@14/bin:$PATH"
          export LDFLAGS="-L/usr/local/opt/llvm@14/lib -L/usr/local/opt/llvm@14/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@14/lib/c++"
          export CPPFLAGS="-I/usr/local/opt/llvm@14/include"
      - name: Build Clio
        run: |
          pwd
          cd clio
          mkdir -p build
          cd build
          conan install .. -of . -b missing -s build_type=Release -o clio:tests=True
          cmake -DCMAKE_TOOLCHAIN_FILE:FILEPATH=build/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . -j4
      - name: Run Test
        run: |
          cd clio/build/bin
          ./clio_tests --gtest_filter="-BackendCassandraBaseTest*:BackendCassandraTest*:BackendCassandraFactoryTestWithDB*"

  code_coverage:
    name: Build on Linux and code coverage
    continue-on-error: false
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          path: clio
      - name: install deps
        run: |
          sudo apt-get -y install git pkg-config protobuf-compiler libprotobuf-dev libssl-dev wget build-essential doxygen bison flex autoconf clang-format gcovr
          sudo pip install conan==1.57.0
      - name: Setup conan artifactory
        run: |
          conan -v
          conan remote add conan-non-prod http://18.143.149.228:8081/artifactory/api/conan/conan-non-prod --insert
      - name: Build clio
        run: |
          cd clio
          mkdir -p build
          cd build
          conan install .. -of . --build boost -b missing -s build_type=Release -o clio:tests=True
          cmake -DCMAKE_TOOLCHAIN_FILE:FILEPATH=build/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCODE_COVERAGE=on ..
          cmake --build . -j2
          make clio_tests-ccov
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: clio/build/clio_tests-gcc-cov/out.xml
          badge: true
          output: both
          format: markdown
